= form_for(@channel, url: @channel.new_record? ? channels_path : channel_path(login_user.username, @channel.id), html: {class: 'form-horizontal'}) do |f|
  - if @channel.errors.any?
    #error_explanation
      h2= t("mongoid.errors.models.channel.title", count: @channel.errors.count)
      ul
        - @channel.errors.full_messages.each do |msg|
          li= msg


  p.invalid_url= t('.invalid_url')
  / Ustreamの場合
  - if @channel.is_a? UstreamChannel
    .control-group
      label.control-label= t('.url')
      .controls
        = f.text_field(:url)
        span.btn.ac_ust_submit= t('.ac_ust')

  / Radikoの場合
  - if @channel.is_a? RadikoChannel
    .control-group
      label.control-label= t('.station_id')
      .controls
        = f.select(:station_id, Station.all.map{|s| [s.name, s.id]}, 'selected' => @channel.station_id)

  .control-group
    label.control-label= t('.title')
    .controls
      = f.text_field(:title)

  .control-group
    label.control-label= t('.description')
    .controls
      = f.text_area(:description)

  .control-group
    label.control-label= t('.buttons')
    .controls
      ul
        - Button.where(_type: 'DefaultButton').each do |button|
          li.chk_button
            = f.check_box :button_ids, {checked: @channel.buttons.include?(button), name: "#{@channel.class.to_s.underscore}[button_ids][]"}, button.id
            = button.name
        - login_user.buttons.each do |button|
          li.chk_button
            = f.check_box :button_ids, {checked: @channel.buttons.include?(button), name: "#{@channel.class.to_s.underscore}[button_ids][]"}, button.id
            = button.name

  = f.hidden_field(:_type)
  .control-group
    .controls
      = link_to t('.cancel'), channel_path(login_user.username, @channel.id), class: 'btn cancel-btn'
      = f.submit(@channel.new_record? ? t('.create') : t('.update'), class: 'btn')
